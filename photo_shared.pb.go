// Code generated by protoc-gen-go. DO NOT EDIT.
// source: photo_shared.proto

package wcity

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Profile Photo
//
// Contains all data for display  a profile picture.
type ProfilePhoto struct {
	//Photo id, unique identifier of this image
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//User email is global unique identifier of the user
	UserEmail string `protobuf:"bytes,2,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	// url of the picture in the server,
	// used for display the picture
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	//Time of upload
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// true if is the fist image
	Selected             bool     `protobuf:"varint,5,opt,name=selected,proto3" json:"selected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfilePhoto) Reset()         { *m = ProfilePhoto{} }
func (m *ProfilePhoto) String() string { return proto.CompactTextString(m) }
func (*ProfilePhoto) ProtoMessage()    {}
func (*ProfilePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbe3263bbb10a08, []int{0}
}

func (m *ProfilePhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfilePhoto.Unmarshal(m, b)
}
func (m *ProfilePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfilePhoto.Marshal(b, m, deterministic)
}
func (m *ProfilePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfilePhoto.Merge(m, src)
}
func (m *ProfilePhoto) XXX_Size() int {
	return xxx_messageInfo_ProfilePhoto.Size(m)
}
func (m *ProfilePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfilePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_ProfilePhoto proto.InternalMessageInfo

func (m *ProfilePhoto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProfilePhoto) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *ProfilePhoto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ProfilePhoto) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ProfilePhoto) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

// City Photo
//
// Contains all data for display  a city picture.
type CityPhoto struct {
	//Photo id, unique identifier of this image
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique identifier of the city, is the neo4jid
	CityId int32 `protobuf:"varint,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	// url of the picture in the server,
	// used for display the picture
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	//Time of upload
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// true if is the fist image
	Selected             bool     `protobuf:"varint,5,opt,name=selected,proto3" json:"selected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CityPhoto) Reset()         { *m = CityPhoto{} }
func (m *CityPhoto) String() string { return proto.CompactTextString(m) }
func (*CityPhoto) ProtoMessage()    {}
func (*CityPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbe3263bbb10a08, []int{1}
}

func (m *CityPhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityPhoto.Unmarshal(m, b)
}
func (m *CityPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityPhoto.Marshal(b, m, deterministic)
}
func (m *CityPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityPhoto.Merge(m, src)
}
func (m *CityPhoto) XXX_Size() int {
	return xxx_messageInfo_CityPhoto.Size(m)
}
func (m *CityPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_CityPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_CityPhoto proto.InternalMessageInfo

func (m *CityPhoto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CityPhoto) GetCityId() int32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *CityPhoto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CityPhoto) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *CityPhoto) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

// Place Photo
//
// Contains all data for display  a place picture.
type PlacePhoto struct {
	//Photo id, unique identifier of this image
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique identifier of the place, is the neo4jid
	PlaceId int32 `protobuf:"varint,2,opt,name=placeId,proto3" json:"placeId,omitempty"`
	// url of the picture in the server,
	// used for display the picture
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	//Time of upload
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// true if is the fist image
	Selected             bool     `protobuf:"varint,5,opt,name=selected,proto3" json:"selected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlacePhoto) Reset()         { *m = PlacePhoto{} }
func (m *PlacePhoto) String() string { return proto.CompactTextString(m) }
func (*PlacePhoto) ProtoMessage()    {}
func (*PlacePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbe3263bbb10a08, []int{2}
}

func (m *PlacePhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlacePhoto.Unmarshal(m, b)
}
func (m *PlacePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlacePhoto.Marshal(b, m, deterministic)
}
func (m *PlacePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlacePhoto.Merge(m, src)
}
func (m *PlacePhoto) XXX_Size() int {
	return xxx_messageInfo_PlacePhoto.Size(m)
}
func (m *PlacePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_PlacePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_PlacePhoto proto.InternalMessageInfo

func (m *PlacePhoto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlacePhoto) GetPlaceId() int32 {
	if m != nil {
		return m.PlaceId
	}
	return 0
}

func (m *PlacePhoto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PlacePhoto) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *PlacePhoto) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

// Post Photo
//
// Contains all data for display  a post picture.
type PostPhoto struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId               string   `protobuf:"bytes,2,opt,name=postId,proto3" json:"postId,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Timestamp            string   `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Selected             bool     `protobuf:"varint,5,opt,name=selected,proto3" json:"selected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostPhoto) Reset()         { *m = PostPhoto{} }
func (m *PostPhoto) String() string { return proto.CompactTextString(m) }
func (*PostPhoto) ProtoMessage()    {}
func (*PostPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbe3263bbb10a08, []int{3}
}

func (m *PostPhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostPhoto.Unmarshal(m, b)
}
func (m *PostPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostPhoto.Marshal(b, m, deterministic)
}
func (m *PostPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostPhoto.Merge(m, src)
}
func (m *PostPhoto) XXX_Size() int {
	return xxx_messageInfo_PostPhoto.Size(m)
}
func (m *PostPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_PostPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_PostPhoto proto.InternalMessageInfo

func (m *PostPhoto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PostPhoto) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

func (m *PostPhoto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PostPhoto) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *PostPhoto) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

type CitysPhoto struct {
	CityId               int32        `protobuf:"varint,1,opt,name=cityId,proto3" json:"cityId,omitempty"`
	CitysPhotos          []*CityPhoto `protobuf:"bytes,2,rep,name=citysPhotos,proto3" json:"citysPhotos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CitysPhoto) Reset()         { *m = CitysPhoto{} }
func (m *CitysPhoto) String() string { return proto.CompactTextString(m) }
func (*CitysPhoto) ProtoMessage()    {}
func (*CitysPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbe3263bbb10a08, []int{4}
}

func (m *CitysPhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CitysPhoto.Unmarshal(m, b)
}
func (m *CitysPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CitysPhoto.Marshal(b, m, deterministic)
}
func (m *CitysPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CitysPhoto.Merge(m, src)
}
func (m *CitysPhoto) XXX_Size() int {
	return xxx_messageInfo_CitysPhoto.Size(m)
}
func (m *CitysPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_CitysPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_CitysPhoto proto.InternalMessageInfo

func (m *CitysPhoto) GetCityId() int32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *CitysPhoto) GetCitysPhotos() []*CityPhoto {
	if m != nil {
		return m.CitysPhotos
	}
	return nil
}

type PlacesCityPhotos struct {
	CityId               int32         `protobuf:"varint,1,opt,name=cityId,proto3" json:"cityId,omitempty"`
	PlaceId              int32         `protobuf:"varint,2,opt,name=placeId,proto3" json:"placeId,omitempty"`
	PlacePhotos          []*PlacePhoto `protobuf:"bytes,3,rep,name=placePhotos,proto3" json:"placePhotos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PlacesCityPhotos) Reset()         { *m = PlacesCityPhotos{} }
func (m *PlacesCityPhotos) String() string { return proto.CompactTextString(m) }
func (*PlacesCityPhotos) ProtoMessage()    {}
func (*PlacesCityPhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbe3263bbb10a08, []int{5}
}

func (m *PlacesCityPhotos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlacesCityPhotos.Unmarshal(m, b)
}
func (m *PlacesCityPhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlacesCityPhotos.Marshal(b, m, deterministic)
}
func (m *PlacesCityPhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlacesCityPhotos.Merge(m, src)
}
func (m *PlacesCityPhotos) XXX_Size() int {
	return xxx_messageInfo_PlacesCityPhotos.Size(m)
}
func (m *PlacesCityPhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_PlacesCityPhotos.DiscardUnknown(m)
}

var xxx_messageInfo_PlacesCityPhotos proto.InternalMessageInfo

func (m *PlacesCityPhotos) GetCityId() int32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *PlacesCityPhotos) GetPlaceId() int32 {
	if m != nil {
		return m.PlaceId
	}
	return 0
}

func (m *PlacesCityPhotos) GetPlacePhotos() []*PlacePhoto {
	if m != nil {
		return m.PlacePhotos
	}
	return nil
}

func init() {
	proto.RegisterType((*ProfilePhoto)(nil), "wcity.ProfilePhoto")
	proto.RegisterType((*CityPhoto)(nil), "wcity.CityPhoto")
	proto.RegisterType((*PlacePhoto)(nil), "wcity.PlacePhoto")
	proto.RegisterType((*PostPhoto)(nil), "wcity.PostPhoto")
	proto.RegisterType((*CitysPhoto)(nil), "wcity.CitysPhoto")
	proto.RegisterType((*PlacesCityPhotos)(nil), "wcity.PlacesCityPhotos")
}

func init() { proto.RegisterFile("photo_shared.proto", fileDescriptor_dcbe3263bbb10a08) }

var fileDescriptor_dcbe3263bbb10a08 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x93, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xe5, 0x86, 0x94, 0xe6, 0x8a, 0x50, 0xf0, 0x80, 0x0c, 0x62, 0x40, 0x99, 0x3a, 0x65,
	0x68, 0xc5, 0x0b, 0xb4, 0x62, 0x60, 0xb3, 0xcc, 0xc2, 0x86, 0x42, 0x62, 0xa8, 0xa5, 0x44, 0xb1,
	0x6c, 0x57, 0xa8, 0x13, 0x12, 0x13, 0xcf, 0xc1, 0x93, 0x62, 0xbb, 0xc1, 0x29, 0x12, 0xd9, 0xb2,
	0xf9, 0xbf, 0xfb, 0x15, 0x7f, 0xf9, 0xcf, 0x07, 0x58, 0x6e, 0x5b, 0xd3, 0x3e, 0xeb, 0x6d, 0xa1,
	0x78, 0x95, 0x4b, 0x65, 0x05, 0x8e, 0xdf, 0x4b, 0x61, 0xf6, 0xd9, 0x17, 0x82, 0x33, 0xaa, 0xda,
	0x57, 0x51, 0x73, 0xea, 0x4c, 0xf8, 0x1c, 0x26, 0xa2, 0x22, 0xe8, 0x16, 0x2d, 0x62, 0x66, 0x4f,
	0xf8, 0x06, 0x92, 0x9d, 0xe6, 0xea, 0xbe, 0x29, 0x44, 0x4d, 0x26, 0xb6, 0x9c, 0xb0, 0xbe, 0x80,
	0x53, 0x88, 0x76, 0xaa, 0x26, 0x91, 0xaf, 0xbb, 0xa3, 0xf3, 0x1b, 0xd1, 0x70, 0x6d, 0x8a, 0x46,
	0x92, 0x93, 0x83, 0x3f, 0x14, 0xf0, 0x35, 0xcc, 0x34, 0xaf, 0x79, 0x69, 0x78, 0x45, 0x62, 0xdb,
	0x9c, 0xb1, 0xa0, 0xb3, 0x0f, 0x48, 0x36, 0x16, 0xe9, 0x7f, 0x8c, 0x4b, 0x98, 0x3a, 0xde, 0x87,
	0xca, 0x33, 0xc4, 0xac, 0x53, 0xa3, 0x02, 0x7c, 0x22, 0x00, 0x5a, 0x17, 0xe5, 0x40, 0x12, 0x04,
	0x4e, 0xa5, 0xeb, 0x06, 0x86, 0x5f, 0x39, 0x76, 0x0a, 0xb4, 0xd5, 0x66, 0x30, 0x05, 0x69, 0x9b,
	0x1d, 0x41, 0xc2, 0x3a, 0x35, 0x2a, 0xc0, 0x13, 0x80, 0x1b, 0x83, 0x3e, 0x10, 0xf4, 0xb9, 0xa3,
	0x3f, 0xb9, 0x2f, 0x61, 0x5e, 0x06, 0x97, 0xb6, 0x38, 0xd1, 0x62, 0xbe, 0x4c, 0x73, 0xff, 0xa8,
	0xf2, 0x30, 0x46, 0x76, 0x6c, 0xca, 0xf6, 0x90, 0xfa, 0x78, 0x75, 0xe8, 0xeb, 0xc1, 0xef, 0x0f,
	0x87, 0xbd, 0x82, 0xb9, 0x0c, 0x43, 0xd2, 0xf6, 0x9f, 0xdd, 0xcd, 0x17, 0xdd, 0xcd, 0xfd, 0xf8,
	0xd8, 0xb1, 0x6b, 0x7d, 0x07, 0x57, 0xa2, 0xcd, 0xdf, 0x94, 0x2c, 0x3b, 0xa3, 0xdf, 0x88, 0x47,
	0xbf, 0x10, 0xeb, 0x94, 0xf6, 0x82, 0xba, 0xe5, 0xa0, 0xe8, 0x7b, 0x12, 0x31, 0xba, 0x79, 0x99,
	0xfa, 0x5d, 0x59, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x17, 0xa6, 0x4e, 0x11, 0x41, 0x03, 0x00,
	0x00,
}
