// Code generated by protoc-gen-go. DO NOT EDIT.
// source: password_service.proto

package wcity

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HashRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashRequest) Reset()         { *m = HashRequest{} }
func (m *HashRequest) String() string { return proto.CompactTextString(m) }
func (*HashRequest) ProtoMessage()    {}
func (*HashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c0e1401011a1e2b, []int{0}
}

func (m *HashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashRequest.Unmarshal(m, b)
}
func (m *HashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashRequest.Marshal(b, m, deterministic)
}
func (m *HashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashRequest.Merge(m, src)
}
func (m *HashRequest) XXX_Size() int {
	return xxx_messageInfo_HashRequest.Size(m)
}
func (m *HashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HashRequest proto.InternalMessageInfo

func (m *HashRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *HashRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type HashResponse struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	HashedPassword       []byte   `protobuf:"bytes,2,opt,name=hashedPassword,proto3" json:"hashedPassword,omitempty"`
	Salt                 []byte   `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashResponse) Reset()         { *m = HashResponse{} }
func (m *HashResponse) String() string { return proto.CompactTextString(m) }
func (*HashResponse) ProtoMessage()    {}
func (*HashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c0e1401011a1e2b, []int{1}
}

func (m *HashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashResponse.Unmarshal(m, b)
}
func (m *HashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashResponse.Marshal(b, m, deterministic)
}
func (m *HashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashResponse.Merge(m, src)
}
func (m *HashResponse) XXX_Size() int {
	return xxx_messageInfo_HashResponse.Size(m)
}
func (m *HashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HashResponse proto.InternalMessageInfo

func (m *HashResponse) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *HashResponse) GetHashedPassword() []byte {
	if m != nil {
		return m.HashedPassword
	}
	return nil
}

func (m *HashResponse) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

type ValidateRequest struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	HasshedPassword      []byte   `protobuf:"bytes,2,opt,name=hasshedPassword,proto3" json:"hasshedPassword,omitempty"`
	Salt                 []byte   `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRequest) Reset()         { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()    {}
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c0e1401011a1e2b, []int{2}
}

func (m *ValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRequest.Unmarshal(m, b)
}
func (m *ValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRequest.Merge(m, src)
}
func (m *ValidateRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRequest.Size(m)
}
func (m *ValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRequest proto.InternalMessageInfo

func (m *ValidateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ValidateRequest) GetHasshedPassword() []byte {
	if m != nil {
		return m.HasshedPassword
	}
	return nil
}

func (m *ValidateRequest) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func init() {
	proto.RegisterType((*HashRequest)(nil), "wcity.HashRequest")
	proto.RegisterType((*HashResponse)(nil), "wcity.HashResponse")
	proto.RegisterType((*ValidateRequest)(nil), "wcity.ValidateRequest")
}

func init() { proto.RegisterFile("password_service.proto", fileDescriptor_3c0e1401011a1e2b) }

var fileDescriptor_3c0e1401011a1e2b = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x51, 0xcf, 0x4b, 0xf3, 0x40,
	0x10, 0x25, 0xdf, 0xd7, 0x96, 0x3a, 0x96, 0x04, 0x46, 0x08, 0x21, 0x27, 0xc9, 0x41, 0x7a, 0x5a,
	0x41, 0xef, 0x82, 0x3d, 0xe9, 0xad, 0x44, 0xf0, 0x2a, 0x9b, 0x66, 0x4c, 0x83, 0xd1, 0x5d, 0x77,
	0x36, 0x06, 0xaf, 0xfe, 0xe5, 0xae, 0xf9, 0x21, 0x69, 0xa8, 0xb7, 0x9d, 0x37, 0x6f, 0xdf, 0xbc,
	0x79, 0x03, 0xa1, 0x96, 0xcc, 0x8d, 0x32, 0xf9, 0x13, 0x93, 0xf9, 0x28, 0x77, 0x24, 0xb4, 0x51,
	0x56, 0xe1, 0xbc, 0xd9, 0x95, 0xf6, 0x33, 0xf6, 0x1b, 0x23, 0xb5, 0x26, 0xc3, 0x1d, 0x9c, 0xdc,
	0xc2, 0xe9, 0x9d, 0xe4, 0x7d, 0x4a, 0xef, 0x35, 0xb1, 0xc5, 0x10, 0x16, 0xb5, 0xfb, 0x77, 0x9f,
	0x47, 0xde, 0xb9, 0xb7, 0x9e, 0xa7, 0x7d, 0x85, 0x31, 0x2c, 0x07, 0xdd, 0xe8, 0x9f, 0xeb, 0x9c,
	0xa4, 0xbf, 0x75, 0x92, 0xc1, 0xaa, 0x93, 0x60, 0xad, 0xde, 0x98, 0xfe, 0xd4, 0xb8, 0x00, 0x7f,
	0xef, 0x78, 0x94, 0x6f, 0xc7, 0x4a, 0xab, 0x74, 0x82, 0x22, 0xc2, 0x8c, 0x65, 0x65, 0xa3, 0xff,
	0x6d, 0xb7, 0x7d, 0x27, 0x2f, 0x10, 0x3c, 0xca, 0xaa, 0xcc, 0xa5, 0xa5, 0xc1, 0xea, 0xd8, 0x92,
	0x77, 0x68, 0x09, 0xd7, 0x10, 0x38, 0xd1, 0x23, 0xb3, 0xa6, 0xf0, 0xb1, 0x61, 0x57, 0x5f, 0x1e,
	0x04, 0x03, 0xe1, 0xa1, 0x0b, 0x11, 0x2f, 0x61, 0xf6, 0xb3, 0x24, 0xa2, 0x68, 0x73, 0x14, 0xa3,
	0xd0, 0xe2, 0xb3, 0x03, 0xac, 0x4f, 0xe1, 0x06, 0x96, 0x83, 0x63, 0x0c, 0x7b, 0xc2, 0x64, 0x85,
	0x38, 0x16, 0x85, 0x52, 0x45, 0xd5, 0x9f, 0x28, 0xab, 0x9f, 0xc5, 0x46, 0xa9, 0xca, 0xb1, 0x6a,
	0xda, 0xf8, 0x00, 0x25, 0x89, 0xe2, 0xb5, 0xb4, 0x42, 0xf3, 0xd6, 0xcb, 0x16, 0x2d, 0xe7, 0xfa,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x18, 0xb7, 0xa3, 0xe0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PasswordServiceClient is the client API for PasswordService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PasswordServiceClient interface {
	Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error)
	Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
}

type passwordServiceClient struct {
	cc *grpc.ClientConn
}

func NewPasswordServiceClient(cc *grpc.ClientConn) PasswordServiceClient {
	return &passwordServiceClient{cc}
}

func (c *passwordServiceClient) Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error) {
	out := new(HashResponse)
	err := c.cc.Invoke(ctx, "/wcity.PasswordService/Hash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordServiceClient) Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/wcity.PasswordService/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PasswordServiceServer is the server API for PasswordService service.
type PasswordServiceServer interface {
	Hash(context.Context, *HashRequest) (*HashResponse, error)
	Validate(context.Context, *ValidateRequest) (*wrappers.BoolValue, error)
}

// UnimplementedPasswordServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPasswordServiceServer struct {
}

func (*UnimplementedPasswordServiceServer) Hash(ctx context.Context, req *HashRequest) (*HashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hash not implemented")
}
func (*UnimplementedPasswordServiceServer) Validate(ctx context.Context, req *ValidateRequest) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}

func RegisterPasswordServiceServer(s *grpc.Server, srv PasswordServiceServer) {
	s.RegisterService(&_PasswordService_serviceDesc, srv)
}

func _PasswordService_Hash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordServiceServer).Hash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wcity.PasswordService/Hash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordServiceServer).Hash(ctx, req.(*HashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasswordService_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordServiceServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wcity.PasswordService/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordServiceServer).Validate(ctx, req.(*ValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PasswordService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wcity.PasswordService",
	HandlerType: (*PasswordServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hash",
			Handler:    _PasswordService_Hash_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _PasswordService_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "password_service.proto",
}
